<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
</root>